<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
</root>